import Head from "next/head";
import { useEffect, useState } from "react";
import smsJson from "./sms.json";

export default function Home() {
	const [bankSms, setBankSms] = useState([]);
	const [documentList, setDocumentList] = useState([]);
	const [nlpDocument, setnlpDocument] = useState({});
	const [bankSmsCount, setBankSmsCount] = useState(0);
	const [startOffset, setStartOffset] = useState(0);
	const [endOffset, setEndOffset] = useState(0);
	const [cursor, setCursor] = useState(0);
	const numberOfFeatures = 4;
	const classList = "flex items-center px-8 py-4 rounded-xl shadow-md";
	var featureList = ["amount", "accountNumber", "payer", "balance"];

	const moveToNextFeature = () => {
		setCursor((cursor + 1) % numberOfFeatures);
		if ((cursor + 1) % numberOfFeatures === 0) {
			setBankSmsCount(bankSmsCount + 1);
			setDocumentList(documentList.concat(nlpDocument));
			setnlpDocument({});
			updateLocalStorage();
		}
		clearSelection();
	};

	const addEventListeners = () => {
		document.body.onkeyup = function (e) {
			if (e.key === "r") {
				refreshFromLocalStorage();
			} else if (e.key === "s") {
				moveToNextFeature();
			} else if (e.key === " ") {
				{
					setnlpDocument(
						getUpdatedDocument(startOffset, endOffset, bankSms[bankSmsCount], featureList[cursor], nlpDocument)
					);
					moveToNextFeature();
				}
			} else if (e.key === "d") {
				setCursor(0);
				setnlpDocument({});
				setBankSmsCount(bankSmsCount + 1);
			}
		};
	};

	const clearSelection = () => {
		if (window.getSelection) {
			if (window.getSelection().empty) {
				window.getSelection().empty();
			} else if (window.getSelection().removeAllRanges) {
				window.getSelection().removeAllRanges();
			}
		} else if (document.selection) {
			document.selection.empty();
		}
	};

	useEffect(() => {
		setBankSms(smsJson);

		var elem = document.getElementById("text");
		addEventListeners();

		document.addEventListener(
			"mouseup",
			function () {
				if (window.getSelection) {
					var text = window.getSelection().toString();
					var range = window.getSelection().getRangeAt(0);
					setStartOffset(range.startOffset);
					setEndOffset(range.endOffset);
				}
			},
			false
		);
	}, [cursor, bankSmsCount, documentList, nlpDocument]);

	const getUpdatedDocument = (start, end, text, feature, nlpDoc) => {
		var document = nlpDoc;
		document.text_snippet = { content: text };
		document.annotations = nlpDoc.annotations || [];
		var annotation = {};
		annotation.text_extraction = {};
		annotation.text_extraction.text_segment = {};
		annotation.text_extraction.text_segment.start_offset = start;
		annotation.text_extraction.text_segment.end_offset = end;
		annotation.display_name = feature;
		document.annotations.push(annotation);
		return document;
	};

	const updateLocalStorage = () => {
		localStorage.setItem("documentList", JSON.stringify(documentList || []));
		localStorage.setItem("documentCount", bankSmsCount);
	};

	const refreshFromLocalStorage = () => {
		setBankSmsCount(JSON.parse(localStorage.getItem("documentCount")) || 0);
		setDocumentList(JSON.parse(localStorage.getItem("documentList")) || []);
	};

	return (
		<div id="body">
			<Head>
				<title>NLP Dataset Creator</title>
				<meta name="description" content="Generated by NLP Dataset Creator" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="flex flex-col justify-between items-center h-screen">
				<h1 className="text-5xl font-bold p-10">NLP Dataset Creator</h1>
				<h2 className="text-center font-medium text-2xl" id="text">
					{bankSms[bankSmsCount]}
				</h2>
				<div className="flex justify-center items-center text-center">
					Start Offset: {startOffset} | End Offset: {endOffset}
					<br />
					Messages Completed: {bankSmsCount}/{bankSms.length}
				</div>
				<div className="flex justify-between w-9/12 pb-10">
					<div className={classList + " bg-green-500 " + (cursor === 0 && "ring-4 ring-black")}>Money</div>
					<div className={classList + " bg-red-500 " + (cursor === 1 && "ring-4 ring-black")}>A/c number</div>
					<div className={classList + " bg-yellow-500 " + (cursor === 2 && "ring-4 ring-black")}>Payer</div>
					<div className={classList + " bg-purple-500 " + (cursor === 3 && "ring-4 ring-black")}>Available Bal</div>
				</div>
			</main>
		</div>
	);
}
